## Runtime configuration for the simcore_service_deployment_agent application.
##
version: "1.0"
rest:
  version: v0
  location: oas3/v0/openapi.yaml
main:
  log_level: INFO
  host: 127.0.0.1
  port: 8888
  watched_git_repositories:
    # all git repositories that shall be controlled
    - id: simcore-github-repo
      url: https://github.com/ITISFoundation/osparc-simcore.git
      branch: master
      pull_only_files: false # if true will only pull the files define in paths
      # tags: ^v[0-9]+.[0-9]+.[0-9]+$
      paths:
        # lists the files where to look for changes in the repo
        - services/docker-compose.yml
        - .env-devel
    - id: simcore-ops-repo
      url: https://github.com/ITISFoundation/osparc-ops.git
      branch: master
      pull_only_files: true
      paths:
        - services/simcore/docker-compose.deploy.yml
        - services/simcore/.env
  docker_private_registries:
    # lists registries and their credentials if necessary to check for services to download from
    - url: https://index.docker.io/v1
      username: username
      password: ""
  docker_stack_recipe:
    # defines the recipe to generate the docker-compose style stack file to be deployed in the swarm
    # An optional command line may be defined to that end that generate the docker-compose file.
    files:
      - id: simcore-ops-repo
        paths:
          - services/simcore/docker-compose.deploy.yml
          - services/simcore/.env
    workdir: simcore-github-repo # defines where the files above shall be copied. Can be defined as temp also to copy them in a temporary directory
    command: >
            export DOCKER_REGISTRY=${SIMCORE_DOCKER_REGISTRY} &&
            export DOCKER_IMAGE_TAG=${SIMCORE_IMAGE_TAG} &&
            export SWARM_STACK_NAME=${SIMCORE_STACK_NAME} &&
            export OPS_PUBLIC_NETWORK=${PUBLIC_NETWORK} &&
            export OPS_MONITORED_NETWORK=${MONITORED_NETWORK} &&
            mv .env .env.platform &&
            cat .env-devel >> .env && cat .env.platform >> .env &&
            docker-compose -f services/docker-compose.yml -f docker-compose.deploy.yml config > stack.yml
    stack_file: stack.yml # the output file of the command above, or just the file to use
    excluded_services: [webclient, minio]
    excluded_volumes: []
    additional_parameters:
      extra_hosts: {}
      environment: {}
  portainer:
    # lists the portainer instances to call upon
    - url: http://portainer:9000
      username: admin
      password: adminadmin
      stack_name: ${SIMCORE_STACK_NAME}
  polling_interval: 15
  notifications:
    - service: mattermost
      url: http://mattermost.com
      message: "[A new staging version of oSparc has been deployed !!!](the_url_to_go_for/)"
      enabled: false
      channel_id: dfsfdsfsf
      personal_token: some_token
      header_unique_name: master
